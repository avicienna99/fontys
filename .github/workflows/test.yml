on: [push]
name: GettingStarted_Container_Workflow
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3
      
      # Login to Azure
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Build and push Docker image
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }} &&
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}
      
      # Deploy to Azure Container Instances (ACI)
      - name: 'Deploy to Azure Container Instances'
        uses: azure/aci-deploy@v1
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: getting-started-github
          location: 'francecentral'
          ports: '3000'
          # Add Azure File Share for Persistent Storage
          azure-file-volume-account-name: "storageaccountvdvb"
          azure-file-volume-account-key: "2EGfZmW0V6HB9Awh975jPObUJfSjsg/apC/18Jiw/bNaaDp20Tg2W5wQKnwBs+kD9fNfew8SiuZG+AStz9kyvA=="
          azure-file-volume-share-name: "filesharename"
          azure-file-volume-mount-path: "/mnt/data"
          # Add Environment Variable for SQLite Database Location
          environment-variables: |
            SQLITE_DB_LOCATION=/mnt/data/todo.db
